union() {
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -26], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 110], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -23], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 220], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -20], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 330], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -17], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 440], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -14], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 550], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -11], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 660], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -8], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 770], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -5], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 880], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, -2], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 990], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 1], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 1100], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 4], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 1210], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 7], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 1320], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 10], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 1430], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 13], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 1540], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 16], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 1650], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 19], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 1760], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 22], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
	multmatrix([[1, 0, 0, 0], [0, 1, 0, 1870], [0, 0, 1, 0], [0, 0, 0, 1]]) {
		projection(cut = false, convexity = 0) {
			intersection() {
				multmatrix([[1, 0, 0, -500], [0, 1, 0, -500], [0, 0, 1, 25], [0, 0, 0, 1]]) {
					cube(size = [1000, 1000, 0.1], center = false);
				}
				difference() {
					union() {
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
									multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
										linear_extrude(height = 4, center = false, convexity = 1, scale = [1, 1], $fn = 50, $fa = 12, $fs = 2) {
											polygon(points = [[5.77, 0], [2.885, 4.99697], [-2.885, 4.99697], [-5.77, 0], [-2.885, -4.99697], [2.885, -4.99697]], paths = undef, convexity = 1);
										}
									}
								}
							}
						}
						multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, -55], [0, 0, 0, 1]]) {
							multmatrix([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]) {
								cylinder($fn = 50, $fa = 12, $fs = 2, h = 55, r1 = 3, r2 = 3, center = false);
							}
						}
					}
					union();
				}
			}
		}
	}
}

